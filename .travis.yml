os: linux
dist: bionic
language: c

# install libkvmi for all tests
before_install:
  # install in /tmp/libkvmi to avoid breaking astyle test
  - git clone https://github.com/bitdefender/libkvmi --branch kvmi-v6 /tmp/libkvmi
  - pushd /tmp/libkvmi
  - ./bootstrap
  - ./configure
  - make
  - sudo make install
  - popd
  - rm -rf /tmp/libkvmi

jobs:
    include:

#
# Whitespace check
#
    - env:
        - TEST="whitespace"
      script:
        - git remote add upstream https://github.com/$TRAVIS_REPO_SLUG.git
        - git fetch upstream
        - git diff --check upstream/master

#
# Astyle check
#
    - env:
        - TEST="astyle"
        - ARTISTIC_STYLE_OPTIONS=".astylerc"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install astyle
      script:
        - astyle -Q `find . -type f -name "*.c" -o -name "*.h"` >> astyle.out
        - TEST=$(cat astyle.out | wc -l)
        - |
          if [[ $TEST -ne 0 ]]; then
            git --no-pager diff
            echo "Please fix style issues as shown above"
            exit 1
          fi

#
# gcc compile test
#
    - env:
        - TEST="gcc compile and install (cmake)"
      compiler: gcc
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=$PWD/install ..
        - make
        - make install

#
# gcc compile test
#
    - env:
        - TEST="gcc compile and install (autotools)"
      compiler: gcc
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --prefix=$PWD/install
        - make
        - make install

#
# clang compile test
#
    - env:
        - TEST="clang compile (cmake)"
      compiler: clang
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake ..
        - make

#
# clang compile test
#
    - env:
        - TEST="clang compile (autotools)"
      compiler: clang
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure
        - make

#
# Coverity
#
    - if: branch = master
      env:
        - TEST="Coverity"
      compiler: gcc
      addons:
        coverity_scan:
            project:
                name: "$COVERITY_PROJECT"
                description: "Build submitted via Travis CI"
            notification_email: $COVERITY_EMAIL
            build_command_prepend: "mkdir build; cd build; cmake .."
            build_command:   "make"
            branch_pattern: $COVERITY_BRANCH
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

#
# SonarCloud
#
    - if: branch = master
      env:
        - TEST="SonarCloud"
      dist: xenial
      compiler: clang
      addons:
        sonarcloud:
            organization: "libvmi"
            token: "$SONAR_SCAN_TOKEN"
      script:
        - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi'
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
        - autoreconf -vif
        - ./configure
        - build-wrapper-linux-x86-64 --out-dir bw-output make -j2
        - sonar-scanner

#
# clang --analyze test
#
    - env:
        - TEST="clang --analyze"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
        - sudo apt-get install clang-tools-10
      script:
        - mkdir build && cd build
        - cmake -DSCAN_BUILD='scan-build-10' ..
        - make static_analysis_test

#
# KVM legacy build (cmake)
#
    - env:
        - TEST="KVM legacy build (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_KVM_LEGACY=ON ..
        - make

#
# KVM legacy build (autotools)
#
    - env:
        - TEST="KVM legacy build (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --enable-kvm-legacy
        - make

#
# debug test
#
    - env:
        - TEST="debug options enabled (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=DEBUG -DVMI_DEBUG=__VMI_DEBUG_ALL ..
        - make

#
# debug test
#
    - env:
        - TEST="debug options enabled (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - CFLAGS=-DVMI_DEBUG=__VMI_DEBUG_ALL ./configure --enable-debug
        - make


#
# disable cache
#
    - env:
        - TEST="disable cache (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_ADDRESS_CACHE=OFF -DENABLE_PAGE_CACHE=OFF ..
        - make

#
# disable cache
#
    - env:
        - TEST="disable cache (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --disable-address-cache --disable-page-cache
        - make

#
# without xenstore
#
    - env:
        - TEST="without xenstore (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_XENSTORE=OFF ..
        - make

#
# without xenstore
#
    - env:
        - TEST="without xenstore (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --without-xenstore
        - make

#
# disable config file
#
    - env:
        - TEST="disable libvmi.conf (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_CONFIGFILE=OFF -DBUILD_EXAMPLES=OFF ..
        - make

#
# disable config file
#
    - env:
        - TEST="disable libvmi.conf (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --disable-configfile --disable-examples
        - make

#
# disable rekall profiles
#
    - env:
        - TEST="disable rekall profiles"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DREKALL_PROFILES=OFF -DBUILD_EXAMPLES=OFF ..
        - make

#
# disable rekall profiles
#
    - env:
        - TEST="disable rekall profiles (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --disable-rekall-profiles --disable-examples
        - make

#
# disable volatility ist
#
    - env:
        - TEST="disable volatility ist (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DVOLATILITY_IST=OFF -DBUILD_EXAMPLES=OFF ..
        - make

#
# disable rekall profiles
#
    - env:
        - TEST="disable volatility ist (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --disable-volatility-ist --disable-examples
        - make

#
# without json
#
    - env:
        - TEST="without json (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_KVM=OFF -DENABLE_BAREFLANK=OFF -DVOLATILITY_IST=OFF -DREKALL_PROFILES=OFF -DBUILD_EXAMPLES=OFF ..
        - make

#
# without json
#
    - env:
        - TEST="without json (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libxen-dev
      script:
        - autoreconf -vif
        - ./configure --disable-kvm --disable-bareflank --disable-volatility-ist --disable-rekall-profiles --disable-examples
        - make

#
# disable safety checks
#
    - env:
        - TEST="disable safety checks (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DENABLE_SAFETY_CHECKS=OFF ..
        - make

#
# disable safety checks
#
    - env:
        - TEST="disable safety checks (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - autoreconf -vif
        - ./configure --disable-safety-checks
        - make

#
# release build
#
    - env:
        - TEST="release build"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev libxen-dev libfuse-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=RELEASE ..
        - make

#
# xen only
#
    - env:
        - TEST="xen only (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libxen-dev
      script:
        - autoreconf -vif
        - ./configure --prefix=$PWD/install --disable-kvm --disable-bareflank --disable-file
        - make
        - make install

#
# file only
#
    - env:
        - TEST="file only (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev
      script:
        - autoreconf -vif
        - ./configure --prefix=$PWD/install --disable-kvm --disable-bareflank --disable-xen
        - make
        - make install

#
# kvm only
#
    - env:
        - TEST="kvm only (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev libvirt-dev
      script:
        - autoreconf -vif
        - ./configure --prefix=$PWD/install --disable-xen --disable-bareflank --disable-file
        - make
        - make install

#
# bareflank only
#
    - env:
        - TEST="bareflank only (autotools)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex autoconf-archive libjson-c-dev
      script:
        - autoreconf -vif
        - ./configure --prefix=$PWD/install --disable-kvm --disable-xen --disable-file
        - make
        - make install

#
# xen only
#
    - env:
        - TEST="xen only (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libxen-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=$PWD/install -DENABLE_KVM=OFF -DENABLE_BAREFLANK=OFF -DENABLE_FILE=OFF ..
        - make
        - make install

#
# kvm only
#
    - env:
        - TEST="kvm only (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev libvirt-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=$PWD/install -DENABLE_XEN=OFF -DENABLE_BAREFLANK=OFF -DENABLE_FILE=OFF ..
        - make
        - make install

#
# bareflank only
#
    - env:
        - TEST="bareflank only (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=$PWD/install -DENABLE_KVM=OFF -DENABLE_XEN=OFF -DENABLE_FILE=OFF ..
        - make
        - make install

#
# file only
#
    - env:
        - TEST="file only (cmake)"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=$PWD/install -DENABLE_KVM=OFF -DENABLE_BAREFLANK=OFF -DENABLE_XEN=OFF ..
        - make
        - make install

#
# compile from make dist tarball
#
    - env:
        - TEST="compile from make dist tarball"
      install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev libvirt-dev
      script:
        - autoreconf -vif
        - ./configure || cat config.log
        - make dist
        - mkdir build && cd build
        - tar xvf ../libvmi-*.tar.gz
        - cd *libvmi*
        - autoreconf -vif
        - ./configure || cat config.log
        - make
